name: Market CD

on:
    pull_request:
        branches:
            - feature/*

jobs:
    cd:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4
                with:
                    token: ${{secrets.ONLINEMARKET_TOKEN}}

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v2

            -   name: Log in to Docker Hub
                uses: docker/login-action@v2
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            -   name: App Build & Push Docker Image
                uses: docker/build-push-action@v4
                with:
                    context: .
                    file: ./Dockerfile
                    push: true
                    tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}
                    platforms: linux/amd64, linux/arm64

            -   name: MySQL Build & Push Docker Image
                uses: docker/build-push-action@v4
                with:
                    context: ./database
                    file: ./database/Dockerfile
                    push: true
                    tags: ${{ secrets.DOCKERHUB_USERNAME }}/mysql
                    platforms: linux/amd64, linux/arm64

            -   name: Deploy
                uses: appleboy/ssh-action@master
                id: deploy
                with:
                    host: ${{ secrets.NCP_SERVER_IP }}
                    username: ${{ secrets.NCP_SERVER_USER }}
                    password: ${{ secrets.NCP_SERVER_PASSWORD }}
                    port: ${{ secrets.NCP_SERVER_SSH_PORT }}
                    script: |
                        sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
                        sudo docker rm -f $(docker ps -q -a)
                        sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mysql
                        sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}
                        docker-compose up -d
                        docker image prune -f
